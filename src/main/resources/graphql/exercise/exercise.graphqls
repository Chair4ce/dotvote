type Exercise {
    id: ID!
    name: String!
}
type Vote {
    id: ID!
    voteType: String!
    ideaId: Idea!
    playerId: Player!
}

type Idea {
    id: ID!
    name: String!
    exerciseId: Exercise!
    votes: [Vote!]!
}

type Player {
    id: ID!
    name: String!
}

type Query {
    exercise(id: Int!): Exercise
    exercises: [Exercise]

    idea(id: Int!): Idea
    ideas(exerciseId: Int!): [Idea]

    player(id: Int!): Player
}

type Mutation {
    createExercise(name: String!): Exercise!
    deleteExercise(id: Int!): Exercise!

    createIdea(name: String!, exerciseId: Int!): Idea!
    deleteIdea(id: Int!): Idea!

    playerLogin(name: String!): Player!

    addVote(voteType: String!, ideaId: Int!, playerId: Int!): Vote!
    deleteVote(id: Int!): Vote!
}


